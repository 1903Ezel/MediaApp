// convert-vapid-key.js
// DÃ¶nÃ¼ÅŸtÃ¼rme: Base64URL â†’ PKCS#8 PEM (Web Push iÃ§in)

import { writeFileSync } from "fs";
import { createPrivateKey } from "crypto";

function base64urlToBase64(base64url) {
  return base64url.replace(/-/g, '+').replace(/_/g, '/');
}

const base64urlKey = "AQA_1OGzVQ7EoF_LX1cMXgAuyZl3WQrf4_kDGSZFBEc"; // ğŸ”‘ senin anahtarÄ±nÄ± buraya yaz
const base64Key = base64urlToBase64(base64urlKey);
const rawKey = Buffer.from(base64Key, "base64");

// OpenSSL'in anlayacaÄŸÄ± ÅŸekilde ECDSA P-256 formatÄ±na Ã§evir
const privateKeyObj = createPrivateKey({
  key: Buffer.concat([
    Buffer.from("302E0201010420", "hex"), // EC private key header (P-256 iÃ§in)
    rawKey,
    Buffer.from("A00706052B8104000A", "hex") // OID: prime256v1
  ]),
  format: "der",
  type: "pkcs8",
});

const pem = privateKeyObj.export({ format: "pem", type: "pkcs8" });

writeFileSync("vapid_private.pem", pem);

console.log("\nâœ… PKCS#8 PEM formatÄ±na dÃ¶nÃ¼ÅŸtÃ¼rÃ¼ldÃ¼!");
console.log("ğŸ“„ vapid_private.pem dosyasÄ±nÄ± .env iÃ§ine ekleyebilirsin.\n");
